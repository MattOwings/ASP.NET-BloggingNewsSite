@page
@model FinalProject_BloggingNewsSite.Pages.RequestAnEditModel

@{
    ViewData["Title"] = "RequestAnEdit";
}

<style>
    * {
        color: #dedede;
    }
    .flex {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }
    .flex-item {
        border: 2px solid #dedede;
        border-radius: 25px;
        width: 100%;
        margin-top: 1rem;
        background-color: #121212;
    }
    .flex-item h1 {
        font-size: 35px;
        font-style: italic;
    }
    .flex-item h2 {
        font-size: 25px;
    }
    .flex-in-flex {
        display: flex;
        flex-wrap: wrap;
        justify-content: left;
    }
    .flex-first {
        width: 75%;
        text-align: center;
    }
    .flex-second {
        margin: auto;
        text-align: center;
        justify-content: left;
    }
    .flex-second a {
        font-size: 25px;
        color: #121212 !important;
    }
</style>

<h1>Edit an Existing Entry</h1>


<div class="flex">
    @foreach (var item in Model.FinalProject_BloggingNewsSiteModel)
            {
                <div class="flex-item">
                    <div class="flex-in-flex">
                        <div class="flex-first">
                            <h1>@Html.DisplayFor(modelItem => item.Title)</h1>
                            <h2>By @Html.DisplayFor(modelItem => item.Author) on @Html.DisplayFor(modelItem => item.Date)</h2>
                        </div>
                        <div class="flex-second">
                            <a class="btn btn-warning" asp-page="./Edit" asp-route-id="@item.ItemID">[ Edit this Entry ]</a>
                        </div>
                    </div>
                    
                    
                </div>
            }

    </div>



<!--
<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FinalProject_BloggingNewsSiteModel[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinalProject_BloggingNewsSiteModel[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinalProject_BloggingNewsSiteModel[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinalProject_BloggingNewsSiteModel[0].Summary)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.FinalProject_BloggingNewsSiteModel) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ItemID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ItemID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ItemID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
    -->